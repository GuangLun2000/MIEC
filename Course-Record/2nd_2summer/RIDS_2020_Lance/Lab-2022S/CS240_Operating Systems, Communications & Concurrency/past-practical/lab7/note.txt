Practical 7
The Producer-Consumer problem is an example of a concurrency problem dealing with the management of a shared finite buffer structure used for exchanging data between processes which are running asynchronously. Some processes write data into the buffer (producers) and other processes remove data from the buffer (consumers) at arbitrary times. A producer can only be allowed write to the buffer if there is space in it, and a consumer can only take from it if there is an item in it.

We are going to simulate this problem using Java threads and the concept of Semaphores to control synchronisation so that two threads don't access the buffer at the same time or against the rules just mentioned.

Please read the accompanying handout in the folder below for the platform you intend to use either Unix or Windows/Eclipse. The code files in this folder can be used on either platform. Note if you have difficulty compiling C code in Eclipse you may like to try to compile and run the C program online instead using one of the links given on the course home page. compile and run online

SUBMIT ON MOODLE
ONE TEXT FILE  containing

1) 10 lines of sample output from the original unmodified code given to you. You may wish to save this in a text for adding to the submission BEFORE modifying the code.

2) 10 lines of sample output from the modified code where you altered the Producer, Consumer and BoundedBufferSimulation classes.

The code of the main() method only in your modified BoundedBufferSimulation class

NB: You do not need to submit any output from the C demo program of the BoundedBuffer simulation, just from the Java implementations.