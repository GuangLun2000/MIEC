//Lab6 Hanlin Cai


#include <ee108.h>

const int SUPERLOOP_MS = 20;


//
// function declarations
//

int* rectangle(int length, int width); // TODO - will need to be modified


// ==============================================================
// top level functions
// ==============================================================

void setup() {
    Serial.begin(9600);
    Serial.println("========= Lab6_RectOutputParams starting ===========");
    Serial.println("Press SW1 to start...");
}

void loop() {
    int sw1Event;
    int length;
    int width;

    sw1Event = readSwitchEvent(sw1Object);

    if (sw1Event == SW_CLICK) {
        // TODO: generate random values for length and width
        length = rand() % 99;
        width = rand() % 99;
        // TODO: you will need to modify this call to the rectangle function
        // to take account of your output parameters

        int* ans = new int[2];
        ans = rectangle(length, width);

        // TODO: you will need to modify this printing code to include output values

        Serial.print("Rectange: length=");
        Serial.print(length);
        Serial.print(", width=");
        Serial.print(width);
        Serial.print(" => area ");
        Serial.print(*ans);
        Serial.print(", perimeter ");
        Serial.print(*(ans + 1));
        Serial.println(""); // newline on its own


        Serial.println("\nPress SW1 to do it again...");
    }

    delay(SUPERLOOP_MS);
}

// ==============================================================
// helper functions
// ============================================================== 

// TODO - this function will need to be modified

int* rectangle(int length, int width) {

    // TODO - you need to add code here
    int* ret = new int[2];
    ret[0] = length + width << 1;
    ret[1] = length * width;
    return ret;
}












#include <ee108.h>
#include <limits.h>

const int SAMPLE_MS = 250;
const int ANALOG_PIN = LDR_PIN;

const int NUM_SAMPLES = 8;
const int FIFO_LEN = 4;

//
// function declarations
//

int sampleAnalogIn(int pin, int* val, int* fifo); // TODO - will need to be modified


// ==============================================================
// top level functions
// ==============================================================

void setup() {
    Serial.begin(9600);
    Serial.println("========= Lab6_OptionalInOut starting ===========");
}

void loop() {
    int i;
    int fifo[4];
    int val[2];
    fifo[0] = fifo[1] = fifo[2] = fifo[3] = 0;
    val[0] = 0x3f3f3f3f;
    val[1] = 0;

    Serial.println("-----------");

    Serial.println("sample without the optional params...");

    for (i = 0; i < NUM_SAMPLES; i++) {
        int value = sampleAnalogIn(ANALOG_PIN, val, fifo); // TODO - will need to be modified

        Serial.print("Sample ");
        Serial.print(i+1);
        Serial.print(", value=");
        Serial.print(value);
        Serial.print(", min=");
        Serial.print(val[0]);
        Serial.print(", max=");
        Serial.print(val[1]);
        Serial.print(", Fifo = {");
        int avg = 0;
        for (int i = 0; i < 4; i++) {
            if (i != 0) {
                Serial.print(", ");
            }
            Serial.print(fifo[i]);
            avg += fifo[i];
        }
        Serial.print("}, average = ");
        Serial.println(avg / 4);
        delay(SAMPLE_MS);
    }

    // TODO - at the correct point int the lab (the description will tell you when)
    // uncomment the following block and edit as necessary to handle udpating the
    // minVal and maxVal variables

//  Serial.println("sample using the optional params...");
//  for (i = 0; i < NUM_SAMPLES; i++) {
//    int value = sampleAnalogIn(ANALOG_PIN); // TODO - will need to be modified
//
//    TODO printing and FIFO
//
//    delay(SAMPLE_MS);
//  }

    delay(8000);
}

// ==============================================================
// helper functions
// ==============================================================

// TODO - this function will need to be modified so that it can update
// the minVal or maxVal seen to date

int sampleAnalogIn(int pin, int* val, int* fifo) {
    int value = analogRead(pin);

    // TODO - extra code to go here
    val[0] = min(val[0], value);
    val[1] = max(val[0], value);
    
    for (int i = 4; i >= 1; i--) {
        fifo[i] = fifo[i - 1];
    }
    
    fifo[0] = value;
    return value;
}



